// <auto-generated />
using System;
using Bargeh.Topics.Api.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Bargeh.Topics.Api.Infrastructure.Migrations;

[DbContext(typeof(TopicsDbContext))]
[Migration("20240402104553_Initial")]
partial class Initial
{
    /// <inheritdoc />
    protected override void BuildTargetModel(ModelBuilder modelBuilder)
    {
        #pragma warning disable 612, 618
        modelBuilder
            .HasAnnotation("ProductVersion", "8.0.2")
            .HasAnnotation("Relational:MaxIdentifierLength", 63);

        NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

        modelBuilder.Entity("Bargeh.Topics.Api.Infrastructure.Models.Post", b =>
        {
            b.Property<Guid>("Id")
             .ValueGeneratedOnAdd()
             .HasColumnType("uuid");

            b.Property<string>("Attachment")
             .HasMaxLength(1024)
             .HasColumnType("character varying(1024)");

            b.Property<Guid>("Author")
             .HasColumnType("uuid");

            b.Property<string>("Body")
             .IsRequired()
             .HasMaxLength(4096)
             .HasColumnType("character varying(4096)");

            b.Property<long>("Dislikes")
             .HasColumnType("bigint");

            b.Property<long>("Funnies")
             .HasColumnType("bigint");

            b.Property<long>("Insights")
             .HasColumnType("bigint");

            b.Property<DateTime>("LastUpdateDate")
             .HasColumnType("timestamp with time zone");

            b.Property<long>("Likes")
             .HasColumnType("bigint");

            b.Property<long>("Loves")
             .HasColumnType("bigint");

            b.Property<Guid?>("ParentId")
             .HasColumnType("uuid");

            b.Property<Guid>("TopicId")
             .HasColumnType("uuid");

            b.HasKey("Id");

            b.HasIndex("ParentId");

            b.HasIndex("TopicId");

            b.ToTable("Posts");
        });

        modelBuilder.Entity("Bargeh.Topics.Api.Infrastructure.Models.Reaction", b =>
        {
            b.Property<Guid>("Id")
             .ValueGeneratedOnAdd()
             .HasColumnType("uuid");

            b.Property<Guid>("PostId")
             .HasColumnType("uuid");

            b.Property<int>("ReactionType")
             .HasColumnType("integer");

            b.Property<Guid>("UserId")
             .HasColumnType("uuid");

            b.HasKey("Id");

            b.HasIndex("PostId");

            b.ToTable("Reactions");
        });

        modelBuilder.Entity("Bargeh.Topics.Api.Infrastructure.Models.Topic", b =>
        {
            b.Property<Guid>("Id")
             .ValueGeneratedOnAdd()
             .HasColumnType("uuid");

            b.Property<Guid>("Forum")
             .HasColumnType("uuid");

            b.Property<DateTime>("LastUpdateDate")
             .HasColumnType("timestamp with time zone");

            b.Property<string>("Permalink")
             .IsRequired()
             .HasMaxLength(16)
             .HasColumnType("character varying(16)");

            b.Property<string>("Title")
             .IsRequired()
             .HasMaxLength(64)
             .HasColumnType("character varying(64)");

            b.HasKey("Id");

            b.ToTable("Topics");
        });

        modelBuilder.Entity("Bargeh.Topics.Api.Infrastructure.Models.Post", b =>
        {
            b.HasOne("Bargeh.Topics.Api.Infrastructure.Models.Post", "Parent")
             .WithMany()
             .HasForeignKey("ParentId");

            b.HasOne("Bargeh.Topics.Api.Infrastructure.Models.Topic", "Topic")
             .WithMany()
             .HasForeignKey("TopicId")
             .OnDelete(DeleteBehavior.Cascade)
             .IsRequired();

            b.Navigation("Parent");

            b.Navigation("Topic");
        });

        modelBuilder.Entity("Bargeh.Topics.Api.Infrastructure.Models.Reaction", b =>
        {
            b.HasOne("Bargeh.Topics.Api.Infrastructure.Models.Post", "Post")
             .WithMany()
             .HasForeignKey("PostId")
             .OnDelete(DeleteBehavior.Cascade)
             .IsRequired();

            b.Navigation("Post");
        });
        #pragma warning restore 612, 618
    }
}