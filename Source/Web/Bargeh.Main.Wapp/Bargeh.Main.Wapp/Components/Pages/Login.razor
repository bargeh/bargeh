@page "/Login"
@rendermode InteractiveServer

@using System.ComponentModel.DataAnnotations
@using Bargeh.Main.Wapp.Client.Infrastructure
@using Bargeh.Main.Wapp.Infrastructure.Dtos
@using MatinDevs.PersianPhoneNumbers

@inject IJSRuntime JsRuntime
@* @inject UsersApiGrpcClientProvider UsersApi *@

<PageTitle>ورود و عضویت - برگه</PageTitle>

<HeadContent>
    <script src="/js/login.js"></script>
</HeadContent>

<div class="popup">
    <span class="no-block-margin padding-buttom horizontal-align center-flex"><img src="/img/User.svg" class="tiny-icon" alt="کاربر" />ورود / ثبت نام</span>

    @switch (_loginState)
    {
        case LoginState.Login:
            <EditForm EditContext="_loginEditContext" FormName="login" OnSubmit="OnLoginSubmit">
                <DataAnnotationsValidator />

                <div class="input-group">
                    <label>شماره‌ی همراه</label>
                    <InputText autocomplete="username" aria-required="true" dir="ltr" class="button-bubble-static" @bind-Value="@_loginModel.Phone" />
                </div>

                <div class="input-group">
                    <label>رمز عبور</label>
                    <InputText type="password" autocomplete="current-password" aria-required="true" dir="ltr" class="button-bubble-static" @bind-Value="_loginModel.Password" />
                </div>

                <button class="button-bubble-static-inline" type="submit">بعدی</button>

                <a class="center" @onclick="OnRegisterRequested">حساب کاربری نداری؟</a>
                <a class="center">رمزت رو فراموش کردی؟</a>

                <ValidationSummary class="red form-errors" />
            </EditForm>
            break;

        case LoginState.Register:
            <EditForm EditContext="_resisterEditContext" FormName="register" OnValidSubmit="OnRegisterSubmit">
                <DataAnnotationsValidator />

                <div class="input-group">
                    <label>شماره‌ی همراه</label>
                    <InputText autocomplete="username" aria-required="true" dir="ltr" class="button-bubble-static" @bind-Value="@_registerModel.Phone" />
                </div>

                <div class="input-group">
                    <label>نام کاربری</label>
                    <InputText aria-required="true" dir="ltr" class="button-bubble-static" @bind-Value="@_registerModel.Username" />
                </div>

                <div class="input-group">
                    <label>نام نمایشی</label>
                    <InputText aria-required="true" dir="ltr" class="button-bubble-static" @bind-Value="@_registerModel.DisplayName" />
                </div>

                <button class="button-bubble-static-inline" type="submit">بعدی</button>

                <ValidationSummary class="red form-errors" />
            </EditForm>
            break;
    }
</div>

@code {
    private LoginState _loginState = LoginState.Login;

    protected override void OnInitialized ()
    {
        #region Login Initialization

        _loginEditContext = new (_loginModel);
        _loginMessageStore = new (_loginEditContext);

        #endregion

        #region Register Initialization

        _resisterEditContext = new (_registerModel);
        _registerMessageStore = new (_resisterEditContext);

        #endregion
    }


    protected override void OnAfterRender (bool firstRender)
    {
        JsRuntime.InvokeVoidAsync ("onAfterRender");
    }

    #region Login

    private LoginDto _loginModel = new ();
    private EditContext _loginEditContext = null!;
    private ValidationMessageStore _loginMessageStore = null!;

    private void OnLoginSubmit ()
    {
        _loginMessageStore.Clear ();

        if (!_loginEditContext.Validate ())
        {
            return;
        }

        if (!_loginModel.PhoneValid)
        {
            _loginMessageStore.Add (() => _loginModel.Phone!, "شماره همراهی که وارد کردی درست نیست");
        }
    }

    #endregion

    #region Register

    private RegisterDto _registerModel = new ();
    private EditContext _resisterEditContext = null!;
    private ValidationMessageStore _registerMessageStore = null!;

    private void OnRegisterSubmit ()
    {
        if (!_resisterEditContext.Validate ())
        {
            return;
        }

        if (!_registerModel.PhoneValid)
        {
            _registerMessageStore.Add (() => _registerModel.Phone!, "شماره همراهی که وارد کردی درست نیست");
        }
    }

    #endregion

    #region Events

    private void OnRegisterRequested ()
    {
        _loginState = LoginState.Register;
        StateHasChanged ();
    }

    #endregion


    private enum LoginState
    {
        Login,
        Register
    }
}