@page "/Login"
@using System.ComponentModel.DataAnnotations
@using Grpc.Net.Client
@using MatinDevs.PersianPhoneNumbers
@using Users.API
@inject IJSRuntime JsRuntime
@rendermode InteractiveWebAssembly

<PageTitle>ورود و عضویت - برگه</PageTitle>

<HeadContent>
    <script src="/js/login.js"></script>
</HeadContent>

<div class="popup">
    <span class="no-block-margin padding-buttom horizontal-align center-flex"><img src="/img/User.svg" class="tiny-icon" alt="کاربر" />ورود / ثبت نام</span>

    <EditForm EditContext="_loginEditContext" FormName="login" OnValidSubmit="OnLoginSubmit">
        <DataAnnotationsValidator />

        <div class="input-group">
            <label>شماره‌ی همراه</label>
            <InputText autocomplete="username" aria-required="true" dir="ltr" class="button-bubble-static" @bind-Value="@_loginModel.Phone" />
        </div>

        <div class="input-group">
            <label>رمز عبور</label>
            <InputText type="password" autocomplete="current-password" aria-required="true" dir="ltr" class="button-bubble-static" @bind-Value="_loginModel.Password" />
        </div>

        <button class="button-bubble-static-inline" type="submit">بعدی</button>

        <a class="center">حساب کاربری نداری؟</a>
        <a class="center">رمزت رو فراموش کردی؟</a>

        <ValidationSummary class="red form-errors" />
    </EditForm>
</div>

@code {
    private LoginModel _loginModel = new ();

    private EditContext _loginEditContext = null!;
    private ValidationMessageStore _messageStore = null!;

    private readonly UsersProto.UsersProtoClient _usersClient = new (GrpcChannel.ForAddress ("http://usersapi"));

    protected override void OnInitialized ()
    {
        _loginEditContext = new (_loginModel);
        _messageStore = new (_loginEditContext);

        _usersClient.GetUserById (new ()
            {
                Id = Guid.NewGuid ().ToString ()
            });
    }


    protected override void OnAfterRender (bool firstRender)
    {
        JsRuntime.InvokeVoidAsync ("onAfterRender");
    }


    public void OnLoginSubmit ()
    {
        _messageStore.Clear ();

        try
        {
            PersianPhone phone = _loginModel.Phone!;
        }
        catch (ArgumentException argumentException)
        {
            _messageStore.Add (() => _loginModel.Phone!, "شماره همراهی که وارد کردی درست نیست");
        }


    }

    public class LoginModel
    {
        [Required (ErrorMessage = "لطفا شماره‌ی همراهت رو وارد کن")]
        public string? Phone { get; set; }

        [Required (ErrorMessage = "لطفا رمز عبورت رو هم وارد کن")]
        [DataType (DataType.Password)]
        public string? Password { get; set; }
    }
}