@page "/http"
@rendermode InteractiveServer
@implements IDisposable

<h2>Holodeck Configuration</h2>

<EditForm EditContext="_editContext" OnValidSubmit="@Submit" FormName="Starship8">
	<div>
		<label>
			<InputCheckbox @bind-Value="Model!.Subsystem1"/> Safety Subsystem
		</label>
	</div>
	<div>
		<label>
			<InputCheckbox @bind-Value="Model!.Subsystem2"/> Emergency Shutdown Subsystem
		</label>
	</div>
	<div>
		<ValidationMessage For=" () => Model!.Options"/>
	</div>
	<div>
		<button type="submit">Update</button>
	</div>
</EditForm>

@code {
	private EditContext? _editContext;

	[SupplyParameterFromForm]
	public Holodeck? Model { get; set; }

	private ValidationMessageStore? _messageStore;

	protected override void OnInitialized()
	{
		Model ??= new();
		_editContext = new(Model);
		_editContext.OnValidationRequested += HandleValidationRequested;
		_messageStore = new(_editContext);
	}

	private void HandleValidationRequested(object? sender, ValidationRequestedEventArgs args)
	{
		_messageStore?.Clear();

		// Custom validation logic
		if(!Model!.Options)
		{
			_messageStore?.Add(() => Model.Options, "Select at least one.");
		}
	}

	private void Submit()
	{
	}

	public class Holodeck
	{
		public bool Subsystem1 { get; set; }
		public bool Subsystem2 { get; set; }
		public bool Options => Subsystem1 || Subsystem2;
	}

	public void Dispose()
	{
		if(_editContext is not null)
		{
			_editContext.OnValidationRequested -= HandleValidationRequested;
		}
	}

}