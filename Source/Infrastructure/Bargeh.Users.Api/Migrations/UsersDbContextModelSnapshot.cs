// <auto-generated />
using System;
using Bargeh.Users.Api.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Bargeh.Users.Api.Infrastructure.Migrations;

[DbContext(typeof(UsersDbContext))]
partial class UsersDbContextModelSnapshot : ModelSnapshot
{
    protected override void BuildModel(ModelBuilder modelBuilder)
    {
        #pragma warning disable 612, 618
        modelBuilder
            .HasAnnotation("ProductVersion", "8.0.2")
            .HasAnnotation("Relational:MaxIdentifierLength", 63);

        NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

        modelBuilder.Entity("Bargeh.Users.Api.Domain.RefreshToken", b =>
        {
            b.Property<Guid>("Id")
             .ValueGeneratedOnAdd()
             .HasColumnType("uuid");

            b.Property<DateTime>("ExpireDate")
             .HasColumnType("timestamp with time zone");

            b.Property<string>("Token")
             .IsRequired()
             .HasMaxLength(128)
             .HasColumnType("character varying(128)");

            b.Property<Guid>("UserId")
             .HasColumnType("uuid");

            b.HasKey("Id");

            b.ToTable("RefreshTokens");
        });

        modelBuilder.Entity("Bargeh.Users.Api.Domain.SmsVerification", b =>
        {
            b.Property<Guid>("Id")
             .ValueGeneratedOnAdd()
             .HasColumnType("uuid");

            b.Property<int>("Code")
             .HasColumnType("integer");

            b.Property<DateTime>("ExpireDate")
             .HasColumnType("timestamp with time zone");

            b.Property<string>("Phone")
             .IsRequired()
             .HasMaxLength(11)
             .HasColumnType("character varying(11)");

            b.HasKey("Id");

            b.ToTable("SmsVerifications");
        });

        modelBuilder.Entity("Bargeh.Users.Api.Domain.User", b =>
        {
            b.Property<Guid>("Id")
             .ValueGeneratedOnAdd()
             .HasColumnType("uuid");

            b.Property<string>("Avatar")
             .IsRequired()
             .HasColumnType("text");

            b.Property<string>("Bio")
             .IsRequired()
             .HasColumnType("text");

            b.Property<bool>("CanCreateForums")
             .HasColumnType("boolean");

            b.Property<string>("Cover")
             .IsRequired()
             .HasColumnType("text");

            b.Property<string>("DisplayName")
             .IsRequired()
             .HasColumnType("text");

            b.Property<string>("Email")
             .HasColumnType("text");

            b.Property<bool>("Enabled")
             .HasColumnType("boolean");

            b.Property<long>("Followers")
             .HasColumnType("bigint");

            b.Property<DateTime>("OnlineDate")
             .HasColumnType("timestamp with time zone");

            b.Property<string>("Password")
             .HasColumnType("text");

            b.Property<string>("PhoneNumber")
             .IsRequired()
             .HasColumnType("text");

            b.Property<int>("PremiumDaysLeft")
             .HasColumnType("integer");

            b.Property<DateTime>("RegisterDate")
             .HasColumnType("timestamp with time zone");

            b.Property<string>("Username")
             .IsRequired()
             .HasColumnType("text");

            b.HasKey("Id");

            b.ToTable("Users");
        });
        #pragma warning restore 612, 618
    }
}
